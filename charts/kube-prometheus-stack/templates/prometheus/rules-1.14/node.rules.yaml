{{- /*
Generated from 'node.rules' group from https://raw.githubusercontent.com/WhizardTelemetry/kse-prometheus/kse/manifests/kubernetes/kubernetes-prometheusRule.yaml
Do not change in-place! In order to change this file first read following link:
https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack/hack
*/ -}}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.node }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  {{- if .Values.heritageNameOverride }}
  name: {{ print "node.rules" | replace "_" "-" | trunc 63 | trimSuffix "-" }}
  {{- else }}
  name: {{ printf "%s-%s" (include "kube-prometheus-stack.fullname" .) "node.rules" | trunc 63 | trimSuffix "-" }}
  {{- end }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}
    {{- if .Values.heritageNameOverride }}
    prometheus: {{ include "prometheus.heritageName" . }}
    {{- end }}
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
{{- if .Values.defaultRules.labels }}
{{ toYaml .Values.defaultRules.labels | indent 4 }}
{{- end }}
{{- if .Values.defaultRules.annotations }}
  annotations:
{{ toYaml .Values.defaultRules.annotations | indent 4 }}
{{- end }}
spec:
  groups:
  - name: node.rules
    rules:
    - expr: sum (node_cpu_seconds_total{job="node-exporter", mode=~"user|nice|system|iowait|irq|softirq"}) by (cpu, instance, job, namespace, pod, cluster)
      record: node_cpu_used_seconds_total
    - expr: |-
        max by (namespace,pod,node,owner_name,owner_kind,qos, cluster)(kube_pod_info{job="kube-state-metrics"}
          * on (namespace, pod, cluster) group_left(owner_kind, owner_name) kube_pod_owner{job="kube-state-metrics"}
          * on (namespace,pod, cluster) group_left(qos) max by (namespace,pod,qos, cluster)
            ((label_replace(container_memory_working_set_bytes{job=~"kubelet|kubeedge", container="",pod!="",id=~".*(burstable|besteffort).*"},"qos","$1","id",".*(burstable|besteffort).*")
            or label_replace(container_memory_working_set_bytes{job=~"kubelet|kubeedge", container="",pod!="",id!~".*(burstable|besteffort).*"},"qos","guaranteed","id",".*")) > bool 0))
      record: 'qos_owner_node:kube_pod_info:'
    - expr: max(kube_pod_info{job="kube-state-metrics"} * on(node, cluster) group_left(role) kube_node_role{job="kube-state-metrics", role="master"} or on(pod, namespace, cluster) kube_pod_info{job="kube-state-metrics"}) by (node, namespace, host_ip, role, pod, cluster)
      record: 'node_namespace_pod:kube_pod_info:'
    - expr: |-
        count by (node, host_ip, role, cluster) (sum by (node, cpu, host_ip, role, cluster) (
          node_cpu_seconds_total{job="node-exporter"}
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        ))
      record: node:node_num_cpu:sum
    - expr: avg by(cluster) (irate(node_cpu_used_seconds_total{job="node-exporter"}[5m]))
      record: :node_cpu_utilisation:avg1m
    - expr: |-
        avg by (node, host_ip, role, cluster) (
          irate(node_cpu_used_seconds_total{job="node-exporter"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:)
      record: node:node_cpu_utilisation:avg1m
    - expr: |-
        1 -
        sum by(cluster) (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"} + node_memory_SReclaimable_bytes{job="node-exporter"})
        /
        sum by(cluster) (node_memory_MemTotal_bytes{job="node-exporter"})
      record: ':node_memory_utilisation:'
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"} + node_memory_SReclaimable_bytes{job="node-exporter"})
          * on (namespace, pod, cluster) group_left(node, host_ip, role)
            node_namespace_pod:kube_pod_info:
        )
      record: node:node_memory_bytes_available:sum
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          node_memory_MemTotal_bytes{job="node-exporter"}
          * on (namespace, pod, cluster) group_left(node, host_ip, role)
            node_namespace_pod:kube_pod_info:
        )
      record: node:node_memory_bytes_total:sum
    - expr: 1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
      record: 'node:node_memory_utilisation:'
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          irate(node_disk_reads_completed_total{job="node-exporter"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_iops_reads:sum
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          irate(node_disk_writes_completed_total{job="node-exporter"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_iops_writes:sum
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          irate(node_disk_read_bytes_total{job="node-exporter"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_throughput_bytes_read:sum
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          irate(node_disk_written_bytes_total{job="node-exporter"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:data_volume_throughput_bytes_written:sum
    - expr: |-
        sum by(cluster) (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[5m])) +
        sum by(cluster) (irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[5m]))
      record: :node_net_utilisation:sum_irate
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[5m]) +
          irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[5m]))
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_utilisation:sum_irate
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_bytes_transmitted:sum_irate
    - expr: |-
        sum by (node, host_ip, role, cluster) (
          irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[5m])
        * on (namespace, pod, cluster) group_left(node, host_ip, role)
          node_namespace_pod:kube_pod_info:
        )
      record: node:node_net_bytes_received:sum_irate
    - expr: sum by(node, host_ip, role, cluster) (sum(max(node_filesystem_files{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"}) by (device, pod, namespace, cluster)) by (pod, namespace, cluster) * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)
      record: 'node:node_inodes_total:'
    - expr: sum by(node, host_ip, role, cluster) (sum(max(node_filesystem_files_free{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"}) by (device, pod, namespace, cluster)) by (pod, namespace, cluster) * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)
      record: 'node:node_inodes_free:'
    - expr: sum by (node, host_ip, role, cluster) (node_load1{job="node-exporter"} * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:) / node:node_num_cpu:sum
      record: node:load1:ratio
    - expr: sum by (node, host_ip, role, cluster) (node_load5{job="node-exporter"} * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:) / node:node_num_cpu:sum
      record: node:load5:ratio
    - expr: sum by (node, host_ip, role, cluster) (node_load15{job="node-exporter"} * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:) / node:node_num_cpu:sum
      record: node:load15:ratio
    - expr: sum by (node, host_ip, role, cluster) ((kube_pod_status_scheduled{job="kube-state-metrics", condition="true"} > 0)  * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:)
      record: node:pod_count:sum
    - expr: (sum(kube_node_status_capacity{resource="pods", job="kube-state-metrics"}) by (node, cluster) * on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (node_namespace_pod:kube_pod_info:{node!="",host_ip!=""}))
      record: node:pod_capacity:sum
    - expr: node:pod_running:count / node:pod_capacity:sum
      record: node:pod_utilization:ratio
    - expr: 'count(node_namespace_pod:kube_pod_info: unless on (pod, namespace, cluster) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Failed|Pending|Unknown|Succeeded"} > 0)) by (node, host_ip, role, cluster)'
      record: node:pod_running:count
    - expr: 'count(node_namespace_pod:kube_pod_info: unless on (pod, namespace, cluster) (kube_pod_status_phase{job="kube-state-metrics", phase=~"Failed|Pending|Unknown|Running"} > 0)) by (node, host_ip, role, cluster)'
      record: node:pod_succeeded:count
    - expr: count(node_namespace_pod:kube_pod_info:{node!="",host_ip!=""} unless on (pod, namespace, cluster) (kube_pod_status_phase{job="kube-state-metrics", phase="Succeeded"}>0) unless on (pod, namespace, cluster) ((kube_pod_status_ready{job="kube-state-metrics", condition="true"}>0) and on (pod, namespace, cluster) (kube_pod_status_phase{job="kube-state-metrics", phase="Running"}>0)) unless on (pod, namespace, cluster) kube_pod_container_status_waiting_reason{job="kube-state-metrics", reason="ContainerCreating"}>0) by (node, host_ip, role, cluster)
      record: node:pod_abnormal:count
    - expr: node:pod_abnormal:count / count(node_namespace_pod:kube_pod_info:{node!="",host_ip!=""} unless on (pod, namespace, cluster) kube_pod_status_phase{job="kube-state-metrics", phase="Succeeded"}>0) by (node, host_ip, role, cluster)
      record: node:pod_abnormal:ratio
    - expr: sum(max(node_filesystem_avail_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"} * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:) by (device, node, host_ip, role, cluster)) by (node, host_ip, role, cluster)
      record: 'node:disk_space_available:'
    - expr: 1- sum(max(node_filesystem_avail_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"} * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:) by (device, node, host_ip, role, cluster)) by (node, host_ip, role, cluster) / sum(max(node_filesystem_size_bytes{device=~"/dev/.*", device!~"/dev/loop\\d+", job="node-exporter"} * on (namespace, pod, cluster) group_left(node, host_ip, role) node_namespace_pod:kube_pod_info:) by (device, node, host_ip, role, cluster)) by (node, host_ip, role, cluster)
      record: node:disk_space_utilization:ratio
    - expr: '(1 - (node:node_inodes_free: / node:node_inodes_total:))'
      record: node:disk_inode_utilization:ratio
    - expr: sum (node_cpu_seconds_total{job="kubeedge", mode=~"user|nice|system|iowait|irq|softirq"}) by (cpu, node, job, cluster)
      record: edge_node_cpu_used_seconds_total
    - expr: |-
        avg by (node, cluster) (
          irate(edge_node_cpu_used_seconds_total{job="kubeedge"}[5m]))
      record: node:edge_node_cpu_utilisation:avg1m
    - expr: |-
        count by (node, cluster) (sum by (node, cpu, cluster) (
          node_cpu_seconds_total{job="kubeedge"}
        ))
      record: node:edge_node_num_cpu:sum
    - expr: |-
        sum by (node, cluster) (
          (node_memory_MemFree_bytes{job="kubeedge"} + node_memory_Cached_bytes{job="kubeedge"} + node_memory_Buffers_bytes{job="kubeedge"} + node_memory_SReclaimable_bytes{job="kubeedge"})
        )
      record: node:edge_node_memory_bytes_available:sum
    - expr: |-
        sum by (node, cluster) (
          node_memory_MemTotal_bytes{job="kubeedge"}
        )
      record: node:edge_node_memory_bytes_total:sum
    - expr: 1 - (node:edge_node_memory_bytes_available:sum / node:edge_node_memory_bytes_total:sum)
      record: 'node:edge_node_memory_utilisation:'
    - expr: |-
        sum by (node, cluster) (
          (irate(node_network_receive_bytes_total{job="kubeedge",device!~"veth.+"}[5m]) +
          irate(node_network_transmit_bytes_total{job="kubeedge",device!~"veth.+"}[5m]))
        )
      record: node:edge_node_net_utilisation:sum_irate
    - expr: |-
        sum by (node, cluster) (
          irate(node_network_transmit_bytes_total{job="kubeedge",device!~"veth.+"}[5m])
        )
      record: node:edge_node_net_bytes_transmitted:sum_irate
    - expr: |-
        sum by (node, cluster) (
          irate(node_network_receive_bytes_total{job="kubeedge",device!~"veth.+"}[5m])
        )
      record: node:edge_node_net_bytes_received:sum_irate
    - expr: |-
        sum by (node, cluster) (
          irate(node_disk_reads_completed_total{job="kubeedge"}[5m])
        )
      record: node:edge_data_volume_iops_reads:sum
    - expr: |-
        sum by (node, cluster) (
          irate(node_disk_writes_completed_total{job="kubeedge"}[5m])
        )
      record: node:edge_data_volume_iops_writes:sum
    - expr: |-
        sum by (node, cluster) (
          irate(node_disk_read_bytes_total{job="kubeedge"}[5m])
        )
      record: node:edge_data_volume_throughput_bytes_read:sum
    - expr: |-
        sum by (node, cluster) (
          irate(node_disk_written_bytes_total{job="kubeedge"}[5m])
        )
      record: node:edge_data_volume_throughput_bytes_written:sum
    - expr: sum by (node, cluster) (node_load1{job="kubeedge"}) / node:edge_node_num_cpu:sum
      record: node:edge_load1:ratio
    - expr: sum by (node, cluster) (node_load5{job="kubeedge"}) / node:edge_node_num_cpu:sum
      record: node:edge_load5:ratio
    - expr: sum by (node, cluster) (node_load15{job="kubeedge"}) / node:edge_node_num_cpu:sum
      record: node:edge_load15:ratio
{{- end }}