{{- /*
Generated from 'k8s.rules' group from https://raw.githubusercontent.com/WhizardTelemetry/kse-prometheus/kse/manifests/kubernetes/kubernetes-prometheusRule.yaml
Do not change in-place! In order to change this file first read following link:
https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack/hack
*/ -}}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.k8s }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  {{- if .Values.heritageNameOverride }}
  name: {{ print "k8s.rules" | replace "_" "-" | trunc 63 | trimSuffix "-" }}
  {{- else }}
  name: {{ printf "%s-%s" (include "kube-prometheus-stack.fullname" .) "k8s.rules" | trunc 63 | trimSuffix "-" }}
  {{- end }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}
    {{- if .Values.heritageNameOverride }}
    prometheus: {{ include "prometheus.heritageName" . }}
    {{- end }}
{{- include "kube-prometheus-stack.labels" . | indent 4 }}
{{- if .Values.defaultRules.labels }}
{{ toYaml .Values.defaultRules.labels | indent 4 }}
{{- end }}
{{- if .Values.defaultRules.annotations }}
  annotations:
{{ toYaml .Values.defaultRules.annotations | indent 4 }}
{{- end }}
spec:
  groups:
  - name: k8s.rules
    rules:
    - expr: |-
        sum (irate(container_cpu_usage_seconds_total{job=~"kubelet|kubeedge", image!="", container!=""}[5m]) * on(namespace, cluster) group_left(workspace) kube_namespace_labels{job="kube-state-metrics"}) by (namespace, workspace, cluster)
        or on(namespace, workspace, cluster) max by(namespace, workspace, cluster) (kube_namespace_labels * 0)
      record: namespace:container_cpu_usage_seconds_total:sum_rate
    - expr: |-
        sum(container_memory_usage_bytes{job=~"kubelet|kubeedge", image!="", container!=""} * on(namespace, cluster) group_left(workspace) kube_namespace_labels{job="kube-state-metrics"}) by (namespace, workspace, cluster)
        or on(namespace, workspace, cluster) max by(namespace, workspace, cluster) (kube_namespace_labels * 0)
      record: namespace:container_memory_usage_bytes:sum
    - expr: |-
        sum(container_memory_working_set_bytes{job=~"kubelet|kubeedge", image!="", container!=""} * on(namespace, cluster) group_left(workspace) kube_namespace_labels{job="kube-state-metrics"}) by (namespace, workspace, cluster)
        or on(namespace, workspace, cluster) max by(namespace, workspace, cluster) (kube_namespace_labels * 0)
      record: namespace:container_memory_usage_bytes_wo_cache:sum
    - expr: |-
        sum by (namespace, label_name, cluster) (
            sum(kube_pod_container_resource_requests{resource="memory", job="kube-state-metrics"} * on (endpoint, instance, job, namespace, pod, service, cluster) group_left(phase) (kube_pod_status_phase{phase=~"Pending|Running"} == 1)) by (namespace, pod, cluster)
          * on (namespace, pod, cluster)
            group_left(label_name) kube_pod_labels{job="kube-state-metrics"}
        )
      record: namespace_memory:kube_pod_container_resource_requests:sum
    - expr: |-
        sum by (namespace, label_name, cluster) (
            sum(kube_pod_container_resource_requests{resource="cpu", job="kube-state-metrics"} * on (endpoint, instance, job, namespace, pod, service, cluster) group_left(phase) (kube_pod_status_phase{phase=~"Pending|Running"} == 1)) by (namespace, pod, cluster)
          * on (namespace, pod, cluster)
            group_left(label_name) kube_pod_labels{job="kube-state-metrics"}
        )
      record: namespace_cpu:kube_pod_container_resource_requests:sum
{{- end }}