apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app.kubernetes.io/name: whizard-telemetry
    app.kubernetes.io/part-of: whizard-telemetry
    prometheus: k8s
    role: alert-rules
  name: whizard-telemetry-rules
  namespace: kubesphere-monitoring-system
spec:
  groups:
  - name: whizard-telemetry-cluster.rules
    rules:
    - expr: |
        max by (cluster, node, workspace, namespace, pod, qos_class, workload, workload_type, role, host_ip) (
                kube_pod_info * on (cluster, namespace) group_left (workspace) (kube_namespace_labels)
              * on (cluster, namespace, pod) group_left (workload, workload_type)
                (
                    label_join(
                      label_join(
                        kube_pod_owner{owner_kind!~"ReplicaSet|DaemonSet|StatefulSet|Job"},
                        "workload",
                        "$1",
                        "owner_kind"
                      ),
                      "workload_type",
                      "$1",
                      "owner_name"
                    )
                  or
                      kube_pod_owner{owner_kind=~"ReplicaSet|DaemonSet|StatefulSet|Job"}
                    * on (namespace, pod) group_left (workload_type, workload)
                      namespace_workload_pod:kube_pod_owner:relabel
                )
            * on (cluster, namespace, pod) group_left (qos_class)
              (kube_pod_status_qos_class > 0)
          * on (cluster, node) group_left (role)
            (
                (kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"})
              or
                kube_node_role{role="control-plane"}
            )
        )
      record: 'workspace_workload_node:kube_pod_info:'
  - name: whizard-telemetry-node.rules
    rules:
    - expr: |
        node:node_memory_bytes_used_total:sum / node:node_memory_bytes_total:sum
      record: node:node_memory_utilisation:ratio
    - expr: |
        node:node_memory_bytes_total:sum - node:node_memory_bytes_used_total:sum
      record: node:node_memory_bytes_available:sum
    - expr: |
        sum by (cluster, node, instance, host_ip)(node_memory_MemTotal_bytes{job="node-exporter"} -(node_memory_MemAvailable_bytes{job="node-exporter"} or (node_memory_Buffers_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Slab_bytes{job="node-exporter"}))) * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"})
      record: node:node_memory_bytes_used_total:sum
    - expr: |
        sum by (cluster, node, instance, host_ip, role)(node_memory_MemTotal_bytes{job="node-exporter"} * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"}))
      record: node:node_memory_bytes_total:sum
    - expr: |
        node:node_filesystem_bytes_used_total:sum / node:node_filesystem_bytes_total:sum
      record: node:node_filesystem_utilisation:ratio
    - expr: |
        node:node_filesystem_bytes_total:sum - node:node_filesystem_bytes_used_total:sum
      record: node:node_filesystem_avaliable_bytes_total:sum
    - expr: |
        sum by (cluster, node, instance, host_ip, role) (
          max by (cluster, node, instance, host_ip, device) (
              node_filesystem_size_bytes{device=~"/dev/.*",device!~"/dev/loop\\d+", job="node-exporter"} -
              node_filesystem_avail_bytes{device=~"/dev/.*",device!~"/dev/loop\\d+", job="node-exporter"}
          ) * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"})
        )
      record: node:node_filesystem_bytes_used_total:sum
    - expr: |
        sum by (cluster, node, instance, host_ip, role) (
          max by (cluster, node, instance, host_ip, device) (
              node_filesystem_size_bytes{device=~"/dev/.*",device!~"/dev/loop\\d+", job="node-exporter"}
          ) * on (cluster,node) group_left(role) ((kube_node_role{role="worker"} unless ignoring (role) kube_node_role{role="control-plane"}) or kube_node_role{role="control-plane"})
        )
      record: node:node_filesystem_bytes_total:sum
    - expr: |
        node:node_pod_total:sum / node:node_pod_quota:sum
      record: node:node_pod_utilisation:ratio
    - expr: |
        sum by(cluster,node,host_ip,role)(kube_pod_status_scheduled{job="kube-state-metrics", condition="true"} * on(cluster,namespace,pod) group_left(node,host_ip,role) workspace_workload_node:kube_pod_info:)
      record: node:node_pod_total:sum
    - expr: |
        sum by (cluster,node,host_ip,role)(kube_node_status_allocatable{resource="pods"} * on (cluster, node) (kube_node_status_condition{condition="Ready",status="true"}) * on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""}))
      record: node:node_pod_quota:sum
    - expr: |
        count by (node, host_ip, role, cluster) (node_namespace_pod:kube_pod_info:{node!=""} unless on (pod, namespace, cluster)(kube_pod_status_phase{job="kube-state-metrics",phase="Succeeded"} > 0)unless on (pod, namespace, cluster)((kube_pod_status_ready{condition="true",job="kube-state-metrics"} > 0)and on (pod, namespace, cluster)(kube_pod_status_phase{job="kube-state-metrics",phase="Running"} > 0))unless on (pod, namespace, cluster)kube_pod_container_status_waiting_reason{job="kube-state-metrics",reason="ContainerCreating"} > 0)/count by (node, host_ip, role, cluster) (node_namespace_pod:kube_pod_info:{node!=""}unless on (pod, namespace, cluster)kube_pod_status_phase{job="kube-state-metrics",phase="Succeeded"}> 0)
      record: node:pod_abnormal:ratio
    - expr: |
        sum by (cluster,node)(node_load1 / on(cluster,node) node:node_num_cpu:sum) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_load1_per_cpu:ratio
    - expr: |
        sum by (cluster,node)(node_load5 / on(cluster,node) node:node_num_cpu:sum) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_load5_per_cpu:ratio
    - expr: |
        sum by (cluster,node)(node_load15 / on(cluster,node) node:node_num_cpu:sum) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_load15_per_cpu:ratio
    - expr: |
        sum by (node, cluster)(irate(node_disk_reads_completed_total{job="node-exporter"}[5m])) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:data_volume_iops_reads:sum
    - expr: |
        sum by (node, cluster)(irate(node_disk_writes_completed_total{job="node-exporter"}[5m])) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:data_volume_iops_writes:sum
    - expr: |
        sum by (node, cluster)(irate(node_disk_read_bytes_total{job="node-exporter"}[5m])) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:data_volume_throughput_bytes_read:sum
    - expr: |
        sum by (node, cluster)(irate(node_disk_written_bytes_total{job="node-exporter"}[5m])) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:data_volume_throughput_bytes_written:sum
    - expr: |
        node:node_inodes_used_total:sum / node:node_inodes_total:sum
      record: node:node_inodes_utilisation:ratio
    - expr: |
        sum by (node, cluster)(node_filesystem_files{job="node-exporter", device=~"/dev/.*",device!~"/dev/loop\\d+"}) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_inodes_total:sum
    - expr: |
        sum by (node, cluster)(node_filesystem_files{job="node-exporter", device=~"/dev/.*",device!~"/dev/loop\\d+"} - node_filesystem_files_free{job="node-exporter", device=~"/dev/.*",device!~"/dev/loop\\d+"}) *  on(node, cluster) group_left(host_ip, role) max by(node, host_ip, role, cluster) (workspace_workload_node:kube_pod_info:{node!="",host_ip!=""})
      record: node:node_inodes_used_total:sum
  - name: whizard-telemetry-namespace.rules
    rules:
    - expr: |
        sum by(cluster,namespace,workload,workload_type)(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{} * on(cluster,namespace,pod)group_left(workload,workload_type) workspace_workload_node:kube_pod_info:{})
      record: namespace:workload_cpu_usage:sum
    - expr: |
        sum by(cluster,namespace,workload,workload_type)(container_memory_usage_bytes{image!="",job="kubelet",metrics_path="/metrics/cadvisor"} * on (cluster, namespace, pod) group_left (node) topk by (cluster, namespace, pod) (1, max by (cluster, namespace, pod, node) (kube_pod_info{node!=""}))* on(cluster,namespace,pod)group_left(workload,workload_type) workspace_workload_node:kube_pod_info:{})
      record: namespace:workload_memory_usage:sum
    - expr: |
        sum by (cluster, namespace,workload,workload_type) (node_namespace_pod_container:container_memory_working_set_bytes{} * on(cluster,namespace,pod)group_left(workload,workload_type) workspace_workload_node:kube_pod_info:{})
      record: namespace:workload_memory_wo_cache_usage:sum
    - expr: |
        sum by (cluster, namespace,workload,workload_type) (irate(container_network_receive_bytes_total{namespace!="", pod!=""}[5m]) * on(cluster,namespace,pod)group_left(workload,workload_type) workspace_workload_node:kube_pod_info:{})
      record: namespace:workload_net_bytes_received:sum_irate
    - expr: |
        sum by (cluster, namespace,workload,workload_type) (irate(container_network_transmit_bytes_total{namespace!="", pod!=""}[5m]) * on(cluster,namespace,pod)group_left(workload,workload_type) workspace_workload_node:kube_pod_info:{})
      record: namespace:workload_net_bytes_transmitted:sum_irate
    - expr: |
        label_replace(sum(kube_daemonset_status_number_unavailable{job="kube-state-metrics"}) by (daemonset, namespace, cluster) / sum(kube_daemonset_status_desired_number_scheduled{job="kube-state-metrics"}) by (daemonset, namespace,cluster), "workload", "$1", "daemonset", "(.*)")
      labels:
        workload_type: daemonset
      record: namespace:workload_unavailable_replicas:ratio
    - expr: |
        label_replace(sum(kube_deployment_status_replicas_unavailable{job="kube-state-metrics"}) by (deployment, namespace, cluster) / sum(kube_deployment_spec_replicas{job="kube-state-metrics"}) by (deployment, namespace, cluster), "workload", "$1", "deployment", "(.*)")
      labels:
        workload_type: deployment
      record: namespace:workload_unavailable_replicas:ratio
    - expr: |
        label_replace(1 - sum(kube_statefulset_status_replicas_ready{job="kube-state-metrics"}) by (statefulset, namespace, cluster) / sum(kube_statefulset_status_replicas{job="kube-state-metrics"}) by (statefulset, namespace, cluster), "workload", "$1", "statefulset", "(.*)")
      labels:
        workload_type: statefulset
      record: namespace:workload_unavailable_replicas:ratio
  - name: whizard-telemetry-apiserver.rules
    rules:
    - expr: |
        sum by(cluster) (irate(apiserver_request_total{job="apiserver"}[5m]))
      record: apiserver:apiserver_request_total:sum_irate
    - expr: |
        sum(irate(apiserver_request_total{job="apiserver"}[5m])) by (verb, cluster)
      record: apiserver:apiserver_request_total:sum_verb_irate
    - expr: |
        sum by(cluster) (irate(apiserver_request_duration_seconds_sum{job="apiserver",subresource!="log", verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) / sum by(cluster) (irate(apiserver_request_duration_seconds_count{job="apiserver", subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m]))
      record: apiserver:apiserver_request_duration:avg
    - expr: |
        sum(irate(apiserver_request_duration_seconds_sum{job="apiserver",subresource!="log", verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) by (verb, cluster) / sum(irate(apiserver_request_duration_seconds_count{job="apiserver", subresource!="log",verb!~"LIST|WATCH|WATCHLIST|PROXY|CONNECT"}[5m])) by (verb, cluster)
      record: apiserver:apiserver_request_duration:avg_by_verb
